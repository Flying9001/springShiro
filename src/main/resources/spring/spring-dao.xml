<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- 将 DB 属性配置文件位置放到列表中 -->
	<bean id="dbResoucrces" class="java.util.ArrayList">
		<constructor-arg>
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</constructor-arg>
	</bean>

	<!-- 用 Spring 加载和管理 DB 属性配置文件 -->
	<bean id="dbPropertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations" ref="dbResoucrces" />
	</bean>

	<!-- dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"/>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"/>
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="com.ljq.demo.shiro.entity" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath*:mapper/*.xml"/>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入SqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 扫描DAO接口实现 -->
		<property name="basePackage" value="com.ljq.demo.shiro.dao" />
	</bean>

</beans>