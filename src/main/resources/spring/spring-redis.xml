<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!-- 将 Redis 属性配置文件位置放到列表中 -->
    <bean id="redisResoucrces" class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <value>classpath*:redis.properties</value>
            </list>
        </constructor-arg>
    </bean>

    <!-- 用Spring加载和管理MQ属性配置文件 -->
    <bean id="redisPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations" ref="redisResoucrces" />
    </bean>

    <!-- redis 链接池 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
    </bean >

    <!--redis连接工厂 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:usePool="true" p:poolConfig-ref="jedisPoolConfig" p:host-name="${redis.host}"
          p:port="${redis.port}" p:password="${redis.pass}" p:timeout="${redis.timeout}"
          p:database="${redis.database}"
    />

    <!--redis操作模版,使用该对象可以操作redis  -->
    <bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <!--开启事务  -->
    </bean >

</beans>